set nocompatible

filetype off
set rtp+=~/.vim/bundle/Vundle.vim
set rtp+=~/.fzf
call vundle#begin()
Plugin 'VundleVim/Vundle.vim'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/syntastic'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'bling/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'sjl/gundo.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'hail2u/vim-css3-syntax'
Plugin 'ap/vim-css-color'
Plugin 'mileszs/ack.vim'
Plugin 'vim-scripts/vim-cursorword'
Plugin 'plasticboy/vim-markdown'
Plugin 'tpope/vim-surround'
Plugin 'mhinz/vim-signify'
Plugin 'leshill/vim-json'
Plugin 'honza/vim-snippets'
Plugin 'vim-scripts/nginx.vim'
Plugin 'ekalinin/Dockerfile.vim'
Plugin 'vim-scripts/Emmet.vim'
Plugin 'unblevable/quick-scope'
Plugin 'Raimondi/delimitMate'
Plugin 'junegunn/vim-easy-align'
Plugin 'StanAngeloff/php.vim'
Plugin 'majutsushi/tagbar'
Plugin 'terryma/vim-multiple-cursors'
Plugin 'slim-template/vim-slim'
Plugin 'vim-scripts/loremipsum'
Plugin 'mhinz/vim-startify'
Plugin 'jwalton512/vim-blade'
Plugin 'posva/vim-vue'
Plugin 'leafgarland/typescript-vim'
Plugin 'pangloss/vim-javascript'
Plugin 'mxw/vim-jsx'
Plugin 'editorconfig/editorconfig-vim'
Plugin 'gcmt/wildfire.vim'
Plugin 'Yggdroot/indentLine'
Plugin 'junegunn/vim-emoji'
Plugin 'mhinz/vim-grepper', { 'on': ['Grepper', '<plug>(GrepperOperator)'] }
Plugin 'morhetz/gruvbox'
Plugin 'ntpeters/vim-better-whitespace'
Plugin 'airblade/vim-gitgutter'
Plugin 'osyo-manga/vim-jplus'
Plugin 'prabirshrestha/asyncomplete.vim'
Plugin 'prabirshrestha/asyncomplete-buffer.vim'
Plugin 'prabirshrestha/asyncomplete-emoji.vim'
Plugin 'prabirshrestha/asyncomplete-file.vim'
Plugin 'prabirshrestha/asyncomplete-tags.vim'
Plugin 'yami-beta/asyncomplete-omni.vim'
Plugin 'Shougo/context_filetype.vim'
Plugin 'Shougo/vimshell.vim'
call vundle#end()
filetype on

let mapleader=','
syntax on

set mouse=r
set ruler
set number
set showmode
set showcmd
set showmatch
set cursorline
set history=2000
set t_ti= t_te=
set nowrap

set hlsearch
set ignorecase
set smartcase
set incsearch

set autowrite
set autoread
set hidden

set sw=4
set ts=4
set colorcolumn=80
set t_Co=256
set laststatus=2
set foldmethod=manual
set viewdir=~/.vim-view
au BufWinLeave ?* silent mkview  "save file foldmethod status
au BufRead ?* silent loadview    "load file foldmethod status
set expandtab
set fencs=utf-8,cp936
set backspace=indent,eol,start
set keywordprg=:help
set guioptions=''
"set gfn=Inconsolata:h9
set gfn=Lucida_Console:h9
set completeopt=menuone,preview
set completefunc=emoji#complete

let base16colorspace=256
let g:enable_bold_font=1
let g:airline_theme='gruvbox'
let g:better_whitespace_enabled=1
set background=dark
colorscheme gruvbox

if has("autocmd")
  au BufReadPost * if line("'\"")>1 && line("'\"")<=line("$") | exe "normal! g'\"" | endif
endif

map  <leader>1 :tabn 1<CR>
map  <leader>2 :tabn 2<CR>
map  <leader>3 :tabn 3<CR>
map  <leader>4 :tabn 4<CR>
map  <leader>e :NERDTreeTabsToggle<CR>
map  <leader>t :TagbarToggle<CR>
map  <C-w>n    :tabnew<CR>
xmap ga <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)
vnoremap < <gv
vnoremap > >gv
if exists(":tnoremap")
  tnoremap <Esc> <C-\><C-n>
endif

let NERDTreeIgnore=['\.vim$', '\~$', '\.pyc$', '\.swp$']
let NERDTreeSortOrder=['^__\.py', '\/$', '*', '\.swp$', '\~$']
let NERDTreeShowBookmarks=1
let NERDTreeChDirMode=0
let g:nerdtree_tabs_synchronize_view=1
set wildignore+=*/tmp/*,*/node_modules/*,*.so,*.swp,*.zip
let g:ctrlp_root_markers = ['.svn', '.git', 'package.json', 'readme.md']
let g:ctrlp_follow_symlinks = 1
let g:ctrlp_working_path_mode = 'wra'
let g:ctrlp_custom_ignore={
      \ 'dir': '\v[\/]\.(git|hg|svn)$',
      \ 'file': '\v\.(so|swp|pyc)$',
    \}
let g:ctrlp_use_caching=1
let g:miniBufExplorerAutoStart=0
let g:airline#extensions#tabline#enabled=1
let g:gitgutter_sign_added = emoji#for('small_blue_diamond')
let g:gitgutter_sign_modified = emoji#for('small_orange_diamond')
let g:gitgutter_sign_removed = emoji#for('small_red_triangle')
let g:gitgutter_sign_modified_removed = emoji#for('collision')

autocmd BufRead,BufNewFile /etc/nginx/* set ft=nginx
autocmd FileType php,python,perl,markdown set sw=4 ts=4
autocmd FileType vim,ruby,javascript,html,css,jade,smarty,blade set sw=2 ts=2
au BufNewFile,BufReadPost *.yml setl sw=2 ts=2
au BufNewFile,BufReadPost *.coffee setl sw=2 ts=2
au BufNewFile,BufReadPost *.json,*.js setl ft=javascript sw=2 ts=2
au BufNewFile,BufReadPost *.pac setl ft=javascript sw=2 ts=2
au BufNewFile,BufReadPost *.scss,*.sass setl ft=scss sw=2 ts=2
au BufNewFile,BufReadPost *.slim setl ft=scss sw=2 ts=2
au BufNewFile,BufReadPost *.vue setl ft=vue sw=2 ts=2
au BufNewFile,BufReadPost *.ts setl ft=typescript sw=2 ts=2
au BufNewFile,BufReadPost makefile setl noexpandtab

command! PlzW w !sudo tee %

call asyncomplete#register_source(asyncomplete#sources#buffer#get_source_options({
    \ 'name': 'buffer',
    \ 'whitelist': ['*'],
    \ 'blacklist': ['go'],
    \ 'completor': function('asyncomplete#sources#buffer#completor'),
    \ }))

au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#emoji#get_source_options({
    \ 'name': 'emoji',
    \ 'whitelist': ['*'],
    \ 'completor': function('asyncomplete#sources#emoji#completor'),
    \ }))

au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#file#get_source_options({
    \ 'name': 'file',
    \ 'whitelist': ['*'],
    \ 'priority': 10,
    \ 'completor': function('asyncomplete#sources#file#completor')
    \ }))

au User asyncomplete_setup call asyncomplete#register_source(asyncomplete#sources#tags#get_source_options({
    \ 'name': 'tags',
    \ 'whitelist': ['c'],
    \ 'completor': function('asyncomplete#sources#tags#completor'),
    \ 'config': {
    \    'max_file_size': 50000000,
    \  },
    \ }))

call asyncomplete#register_source(asyncomplete#sources#omni#get_source_options({
    \ 'name': 'omni',
    \ 'whitelist': ['*'],
    \ 'blacklist': ['c', 'cpp', 'html'],
    \ 'completor': function('asyncomplete#sources#omni#completor')
    \  }))
